一、容器
  -Docker是一套完整的容器管理系统
  -Docker提供一组命令，让用户更加方便直接的使用容器技术，而不需要关心底层内核技术
  -内核版本3.0以上，64位操作系统，至少RHEL6.5以上版本，强烈推荐RHEL7，必须关闭防火墙
  -容器技术的核心由以下几个内核技术组成：
                                    -Cgroups(Control Groups)资源管理
                                    -NameSpace-进程隔离（主机名、用户、进程、网络、信号向量、文件系统）
                                    -SELinux安全
                
二、
  1、docker images
  2、docker search centos
  3、docker pull 镜像文件
  4、docker 子命令 子命令参数
  5、docker help 子命令
  6、docker help search     查看serach子命令帮助     
  7、man docker-子命令
  8、
三、镜像的备份与恢复
  1、备份
    #docker save 名称:标签 > 名称.tar  (注：名称+标签=唯一)
  2、恢复
    #docker load < 名称.tar
  3、删除
    #docker rmi 镜像:标签
  4、创建容器
    #docker run -it 镜像名称:标签 命令(容器内)
          -i  交互式
          -t  终端
          -d  后台进程
    
    #docker run -it centos:latest  （如果没有指定启动命令后，就启动默认命令）
      latest是默认标签，没有声明就使用latest
  5、查看正在运行中的容器
    #docker ps
    #docker ps -a  显示所有容器
  6、查看镜像制作历史
    #docker history
  7、查看镜像底层信息
    #docker inspect
  8、修改镜像名称和标签
    #docker tag
  9、显示所有的容器ID
    #docker ps -qa
  10、删除镜像，启动容器时删除镜像会失败，先删除容器再删除镜像
    #docker rmi nginx  //nginx为镜像名
      Error response from daemon: conflict: unable to remove repository reference "nginx" (must force) - container 4f83871aa42e is using its referenced image a5311a310510 //删除时报错
    #docker stop $(docker -qa)
    #docker rm $(docker -qa)
    # docker rmi nginx   //成功删除
    
  11、启动关闭容器
    #docker start 容器id
    #docker stop 容器id
    #docker restart 容器id
    
    #docker stop 6c54df8dd460
  12、查看容器内进程列表
    #docker top
  13、进入容器
    #docker attach 容器id       //进入容器，exit会导致容器关闭
    #docker exec 容器id         //进入容器，退出时不会关闭容器
  14、
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
