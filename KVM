虚拟化服务平台
  KVM/QENU/LIBVIRTD
  -kvm是linux内核的模块，它需要CPU的支持，采用硬件辅助虚拟化技术Intel-VT，AMD-V
    内存的相关如Intel的EPT，AMD的RVI技术
  -qemu是一个虚拟化仿真工具，通过ioctl与内核kvm交互完成对硬件的虚拟化支持
  -Libvirt是一个对虚拟化管理的接口和工具，提供用户端程序virsh,virt-install,virt-manager,virt-view与用户交互
一、搭建KVM服务器
  1、虚拟化概念
    #who -b  查看系统上次启动时间
    virtualization资源管理
    #yum -y install git
    #git clone git://172.40.53.65/nsd1810.git
    #git clone git://124.207.192.18/nsd1810.git
    #cd nsd1810
    #git pull
    
    #cat /proc/cupinfo 查看cpu信息
    #lsmod    //显示系统已加载模块
  2、必备软件
    -qemu-kvm：为kvm提供底层仿真支持
    -libvirt-daemon：libvirtd守护进程，管理虚拟机
    -libvirt-client：用户端软件，提供客户端管理命令
    -libvirt-daemon-driver-qemu：libvirtd连接qemu的驱动
  3、虚拟化平台的安装
    #yum -y install qemu-kvm libvirt-daemon libvirt-client libvirt-daemon-driver-qemu
    #systemctl start libvirtd
  4、虚拟机组成
    -内核虚拟化模块（KVM）
    -系统设备仿真（QEMU）
    -虚拟机管理程序（LIBVIRT）
    
    -虚拟机声明配置文件：XML文件
    -虚拟机硬盘：磁盘镜像文件
  5、virsh命令工具介绍
    #virsh
    格式：#virsh 控制命令 [虚拟机名称] [参数]
    
    -查看KVM节点信息
      #virsh nodeinfo
    -列出虚拟机
      #virsh list [--all]
    -列出虚拟网络
      #virsh net-list [--all]
    -查看指定虚拟机的信息
      #virsh dominfo 虚拟机名称
    -查看虚拟网卡
      #virsh domiflist 虚拟机名称
    -运行|重启|关闭指定的虚拟机
      #virsh start|reboot|shutdown 虚拟机名称
    -强制关闭指定的虚拟机
      #virsh destory 虚拟机名称
    -将指定的虚拟机设为开机自动运行
      #virsh autostart 虚拟机名称
      #virsh autostart --disable 虚拟机名称    //开机不自动启动
    
    -虚拟机远程管理
      #virsh -c qemu+ssh://root@172.40.52.107/system
  6、常用镜像盘类型
    -文件格式
      RAW:
      QCOW2:
    -qemu-img命令
      -是虚拟机的磁盘管理命令，支持多磁盘格式，如raw、qcow2、vdi、vmdk等
    -命令格式
      #qemu-img 命令 参数 块文件名称 大小
        -常用命令：
                 - create     创建磁盘
                 - convert    转换磁盘格式
                 - info       查看磁盘信息
                 - snapshot   管理磁盘快照
    -创建新的镜像盘文件
      #qemu-img create -f 格式 磁盘路径 大小
      #qemu-img create -f qcow2 disk.img 50G
      
    -查询镜像盘文件的信息
      #qemu-img info 磁盘路径
      #qemu-img info disk.img
      
    -使用后端模板文件
      #qemu-img create -b disk.img -f qcow2 disk1.img
  7、COW技术原理
    -Copy On Write,写时复制
      -直接映射原始盘的数据内容
      -当原始盘的旧数据修改时，再修改之前自动将旧数据存入前端盘
      -对前端盘的修改不回写到原始盘
二、创建虚拟交换机
  1、创建配置文件
    <network>
    <name>vbr</name>                                                //给虚拟交换机的名字
    <bridge name='vbr' stp='on' delay='0'/>                         //ifconfig显示的名字，stp防止环路，delay通信延迟
    <domain name='vbr'/>                                            //标识虚拟交换机的名字
    <forward mode="nat"/>                                           //启用NAT技术
    <ip address='192.168.1.254' netmask='255.255.255.0'>            //
      <dhcp>
        <range start="192.168.1.100" end="192.168.1.200"/>
      </dhcp>
    </ip>
    </network>
  2、相关命令
    #cp vbr.xml /etc/libvirt/qemu/networks/
    #virsh net-define /etc/libvirt/qemu/networks/vbr.xml
    #virsh net-list --all
    #virsh net-start vbr
    #virsh net-list
    #ifconfig
  3、virsh管理虚拟网络
    - net-list                //查看虚拟网络
    - net-define vbr.xml      //创建虚拟网络
    - net-undefine vbr        //删除虚拟网络
    - net-start vbr           //启动虚拟网络
    - net-destroy vbr         //停止虚拟网络
    - net-edit vbr            //修改vbr网络的配置
    - net-autostart vbr       //设置vbr虚拟网络开机自启
  4、XML管理
    -配置文件：默认位置/etc/libvirt/qemu/虚拟机名.xml
      <domain type='kvm'>
      <name>node</name>
      <memory unit='KB'>1524000</memory>                          //最大使用内存
      <currentMemory unit='KB'>1524000</currentMemory>
      <vcpu placement='static'>2</vcpu>                           //表示虚拟机cpu数
      <os>                                                        //系统信息
        <type arch='x86_64' machine='pc'>hvm</type>               //64位
        <boot dev='hd'/>                                          //引导启动位置
        <bootmenu enable='yes'/>                                  //是否显示引导菜单
        <bios useserial='yes'/>
      </os>
      <features>                                                  //电源管理
        <acpi/>
        <apic/>
      </features>
      <cpu mode='host-passthrough'>                               //cpu运行模式
      </cpu>
      <clock offset='localtime'/>                                 //时钟
      <on_poweroff>destroy</on_poweroff>                          //
      <on_reboot>restart</on_reboot>
      <on_crash>restart</on_crash>
      <devices>                                                     
        <emulator>/usr/libexec/qemu-kvm</emulator>
        <disk type='file' device='disk'>                            //硬件仿真
          <driver name='qemu' type='qcow2'/>
          <source file='/var/lib/libvirt/images/node.img'/>         //磁盘仿真
          <target dev='vda' bus='virtio'/>
        </disk>
        <interface type='bridge'>                                   //网卡仿真
          <source bridge='vbr'/>                                    //标识连接哪个虚拟机
          <model type='virtio'/>
        </interface>
        <channel type='unix'>
          <target type='virtio' name='org.qemu.guest_agent.0'/>     //和虚拟机通信的客户端
        </channel>
        <serial type='pty'></serial>
        <console type='pty'>                                        //
          <target type='serial'/>
        </console>
        <memballoon model='virtio'></memballoon>
      </devices>
    </domain>
  5、导出xml配置文件
    -查看：#virsh dumpxml 虚拟机名
    -备份：#virsh dumpxml 虚拟机名 > 虚拟机名.xml
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  创建虚拟机步骤：
    1、#cp node.xml /etc/libvirt/qemu/node1.xml
    2、#vim /etc/libvirt/qemu/node1.xml
    3、#virsh define /etc/libvirt/qemu/node1.xml
    4、#virsh start node1
    5、#virsh console node1

三、
四、
五、


























